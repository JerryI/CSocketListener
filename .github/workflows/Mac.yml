name: Compile LLink Mac and UV x64
on: workflow_dispatch
jobs:

  MacOSX-x64:
    runs-on: macos-13
    env:
      WOLFRAM_SYSTEM_ID: MacOSX-x64
      WOLFRAMENGINE_CACHE_KEY: WolframEngine-D
      WOLFRAMENGINE_INSTALLATION_DIRECTORY: "/Applications/Wolfram Engine.app"
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}        

      - name: Cache/restore Wolfram Engine install
        id: cache-restore
        uses: actions/cache@v3
        with:
          path: ${{ env.WOLFRAMENGINE_INSTALLATION_DIRECTORY }}
          key: wolframengine-${{ env.WOLFRAM_SYSTEM_ID }}-${{ env.WOLFRAMENGINE_CACHE_KEY }}

      - name: Install Wolfram Engine
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: |
          echo 'Installing Wolfram Engine...'
          brew install --cask wolfram-engine
          brew install libuv
          echo 'Installed Wolfram Engine.'

      - name: Compile function
        env:
          WOLFRAMENGINE_EXECUTABLES_DIRECTORY: "${{ env.WOLFRAMENGINE_INSTALLATION_DIRECTORY }}/Contents/Resources/Wolfram Player.app/Contents/MacOS"
          WOLFRAMSCRIPT_ENTITLEMENTID: ${{ secrets.WOLFRAM_LICENSE_ENTITLEMENT_ID }}
          WOLFRAMSCRIPT_KERNELPATH: "${{ env.WOLFRAMENGINE_INSTALLATION_DIRECTORY }}/Contents/MacOS/WolframKernel"
        run: |
          export PATH="${{ env.WOLFRAMENGINE_EXECUTABLES_DIRECTORY }}:$PATH"

          wolframscript -debug -verbose -script ./Scripts/BuildLibrary.wls /usr/local/include/ /usr/local/lib/libuv.a

      - name: Commit files
        run: |
          git config pull.rebase false        
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add LibraryResources/
          git commit -m "Add binary for ${{ env.WOLFRAM_SYSTEM_ID }}"
          git pull
          git push